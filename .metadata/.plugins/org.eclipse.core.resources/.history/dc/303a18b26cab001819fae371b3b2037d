package com.ibm.training;

public class Dispatcher implements Runnable {
	Service service;
	
	public Dispatcher() {
		// TODO Auto-generated constructor stub
	}
	
	public Dispatcher(Service service) {
		this.service = service;
	}

	@Override
	public void run() throws ExpiredProductException{
		while(true) {
			try {
				checkForExpiry();
				// get all perishable products
				Product[] productArray = service.reviewProducts(EnumProdType.PERISHABLE);
				// check if any is Expired
				for(int i=0; i<productArray.length; i++) {
					Perishable peri = (Perishable) productArray[i];
					if(peri != null && peri.getExpiresIn() < 1) {
						throw new ExpiredProductException("Product is expired!");
					}
				}
//				System.out.println("\n\n...One day has passed. Days until expiry gets closer.");
//				System.out.println(service.arrayToString(productArray));
				Thread.sleep(2000);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (ExpiredProductException e) {
				System.out.println("Expired product found!");
			}
		}
	}
	
	public void checkForExpiry() throws ExpiredProductException{
		
	}

}
